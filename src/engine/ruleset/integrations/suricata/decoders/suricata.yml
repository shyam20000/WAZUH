name: decoder/suricata/0

metadata:
  module: suricata
  compatibility: v6.0.0 and higher
  versions:
    - "6.0.0"
    - "7.0.0"
  author:
    name: Wazuh Inc, info@wazuh.com
    date: May 18 2024
  references:
    - https://suricata.readthedocs.io/en/suricata-6.0.8/output/eve/eve-json-format.html?highlight=eve%20format
  title: Suricata decoder
  description: Decoder for Suricata open source network analysis and threat detection software.

definitions:
  is_good_appProto: string_not_equal($json_event.app_proto,failed) AND string_not_equal($json_event.app_proto,template) AND string_not_equal($json_event.app_proto,template-rust)

check:
  - json_event.event_type: exists()
  - json_event.flow_id: exists()
#TODO: Once the events arrive tagged, uncomment these lines below and remove the above `event.original`
# - event.module: suricata

normalize:
  - map:
      - event.category: array_append(network)
      - event.kind: event
      - event.module: suricata
      - wazuh.decoders: array_append(suricata)

      - destination.address: $json_event.dest_ip
      - destination.ip: $destination.address
      - destination.port: $json_event.dest_port
      - event.created: $json_event.timestamp
      - network.transport: $json_event.proto
      - source.address: $json_event.src_ip
      - source.ip: $json_event.src_ip
      - source.port: $json_event.src_port
      - json_event.app_proto: downcase($json_event.app_proto)

  - check: $is_good_appProto
    map:
      - network.protocol: $json_event.app_proto

  - check:
      - json_event.app_proto: string_equal(ftp-data)
    map:
      - network.protocol: ftp
      - json_event.event_type: downcase($json_event.event_type)
      - json_event.netwrok.transport: downcase($json_event.network.transport)
      - json_event.proto: downcase($json_event.proto)

  - map:
      - destination.bytes: $json_event.flow.bytes_toclient
      - destination.mac: $json_event.ether.dest_mac
      - destination.packets: $json_event.flow.pkts_toclient
      - source.bytes: $json_event.flow.bytes_toserver
      - source.mac: $json_event.ether.src_mac
      - source.packets: $json_event.flow.pkts_toserver
      - event.start: $json_event.flow.start
      - event.end: $json_event.flow.end

  - check:
      - json_event.flow.state: string_equal(new)
    map:
      - event.type: array_append(end)
