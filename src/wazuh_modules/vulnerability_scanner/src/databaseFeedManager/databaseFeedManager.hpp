/*
 * Wazuh Vulnerability scanner
 * Copyright (C) 2015, Wazuh Inc.
 * March 25, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#ifndef _DATABASE_FEED_MANAGER_HPP
#define _DATABASE_FEED_MANAGER_HPP

#include "contentRegister.hpp"
#include "indexerConnector.hpp"
#include "observer.hpp"
#include "routerSubscriber.hpp"
#include <external/nlohmann/json.hpp>
#include <functional>
#include <memory>
#include <string>
#include <vector>

/**
 * @brief DatabaseFeedManager class.
 *
 */
class DatabaseFeedManager final : public Observer<nlohmann::json&>
{
public:
    /**
     * @brief Class constructor.
     *
     * @param indexerConnector Indexer connector.
     */
    explicit DatabaseFeedManager(std::shared_ptr<IndexerConnector> indexerConnector);

    /**
     * @brief Updates scheduler interval.
     *
     * @param data Data containing the interval.
     */
    void update(nlohmann::json& data) override
    {
        m_contentRegistration->changeSchedulerInterval(data.at("updater").at("interval").get<size_t>());
    }

private:
    std::unique_ptr<RouterSubscriber> m_contentUpdateSubscription;
    std::unique_ptr<ContentRegister> m_contentRegistration;
    std::shared_ptr<IndexerConnector> m_indexerConnector;
};

#endif // _DATABASE_FEED_MANAGER_HPP
